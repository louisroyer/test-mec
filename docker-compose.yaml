x-define:
  x-entrypoint-test-dn: &entrypoint-test-dn # TODO A dedicated image to do this lightfully
    image: louisroyer/network-debug 
    restart: "no" # oneshot
    cap_add:
      - NET_ADMIN
    volumes:
      - ./entrypoint-test-dn.sh:/usr/local/bin/entrypoint.sh:ro
    entrypoint: entrypoint.sh

  x-debug:
    x-debug-common: &debug-common
      image: louisroyer/network-debug
      cap_add:
        - NET_ADMIN
      profiles:
        - debug
  x-debug-lvl2:
    x-debuglvl2-common: &debug-lvl2-common
      image: louisroyer/network-debug
      cap_add:
        - NET_ADMIN
      profiles:
        - debug-lvl2
  x-ue:
    x-ue-environment-common: &ue-environment-common
      MCC: "001"
      MNC: "01"
      GNBS: |-
        - "10.0.200.130"
        - "fd00:d0cc:e700:1111:1:8000:0:2"
    x-ue-environment-sliceA: &ue-environment-sliceA
      <<: *ue-environment-common
      CONFIGURED_NSSAI: |-
        - sst: 1
          sd: 0x010203
      DEFAULT_NSSAI: |-
        - sst: 1
          ds: 0x010203
      SESSIONS: |-
        - type: "IPv4"
          apn: "sliceA"
          slice:
            sst: 1
            sd: 0x010203
    x-ue-common: &ue-common
      image: louisroyer/ueransim-ue
      cap_add:
        - NET_ADMIN
      devices:
        - "/dev/net/tun:/dev/net/tun"
      sysctls:
        - net.ipv6.conf.all.disable_ipv6=0
      dns:
        - 10.0.224.3
      command: [" "]
      networks:
        ran-net: # automatic allocation for UEs

x-group:
  x-group-ue: &group-ue # ue1 + debug
    ue1:
      <<: *ue-common
      container_name: ue1
      hostname: ue1
      environment:
        <<: *ue-environment-sliceA
        MSISDN: "0000000001"
    ue1-debug:
      <<: *debug-common
      container_name: ue1-debug
      network_mode: service:ue1
  x-group-gnb: &group-gnb # gnb1
    gnb1:
      container_name: gnb1
      hostname: gnb1
      depends_on:
        - upf1
        - amf1
      build:
        context: ./ueransim
        target: ueransim-gnb
        args:
          IPERF2_RELEASE: 2-1-4
      image: ueransim-gnb
      volumes:
        - ./config/templates/config-gnb.yaml:/etc/ueransim/config-template.yaml:ro
        - ./config/templates/scripts/config-gnb.sh:/usr/local/bin/config.sh:ro
        - ./config/routing-gnb.sh:/usr/local/bin/routing.sh:ro
      command: -c /etc/ueransim/config.yaml
      cap_add:
        - NET_ADMIN
      sysctls:
        - net.ipv6.conf.all.disable_ipv6=0
      environment:
        - ROUTING=routing.sh
        - CONFIG_SCRIPT=config.sh
        - TEMPLATE=/etc/ueransim/config-template.yaml
        - CONFIG_FILE=/etc/ueransim/config.yaml
        - MCC=001
        - MNC=01
        - NCI=0x000000010
        - LINK_IP=fd00:d0cc:e700:1111:1:8000:0:2
          #- LINK_IP=10.0.200.130
        - NGAP_IP=10.0.202.2
          #- NGAP_IP=fd00:d0cc:e700:1111:2:8000:0:2
        - GTP_IP=10.0.203.3
          #- GTP_IP=fd00:d0cc:e700:1111:3:8000:0:3
        - AMF_IP=10.0.202.3
          #- AMF_IP=fd00:d0cc:e700:1111:2:8000:0:3
        - SST_LIST=1
        - SD_LIST=0x010203
        - TAC=1
      networks:
        ran-net:
          ipv4_address: 10.0.200.130
          ipv6_address: fd00:d0cc:e700:1111:1:8000:0:2
        n2-net:
          ipv4_address: 10.0.202.2
          ipv6_address: fd00:d0cc:e700:1111:2:8000:0:2
        n3-net:
          ipv4_address: 10.0.203.3
          ipv6_address: fd00:d0cc:e700:1111:3:8000:0:3
  x-group-upf-a: &group-upf-a # upf1
    upf1:
      container_name: upf1
      hostname: upf1
      restart: always
      build:
        args:
          NEXTMNUPF_RELEASE: v0.0.3
        context: ./nextmn-upf
        target: nextmn-upf 
      image: nextmn-upf
      working_dir: /volume
      volumes:
        - ./config/upf1-nextmn-upf.yaml:/etc/upfd/config.yaml:ro
        - ./config/upf1-routing.sh:/usr/local/bin/routing.sh:ro
      command: -c /etc/upfd/config.yaml
      cap_add:
        - NET_ADMIN
      devices:
        - "/dev/net/tun"
      sysctls:
        - net.ipv4.ip_forward=1
      environment:
        - ROUTING=routing.sh
        - CONFIG_FILE=/etc/upfd/config.yaml
      networks:
        n3-net:
          ipv4_address: 10.0.203.2
          ipv6_address: fd00:d0cc:e700:1111:3:8000:0:2
        n4-net:
          ipv4_address: 10.0.204.3
        test-net:
          ipv4_address: 10.0.224.2
  x-group-core-network-aux-nf: &group-core-network-aux-nf # f5gc-populate, nrf, mongodb, ausf, nssf, udm, upr, pcf
    free5gc-populate:
      container_name: free5gc-populate
      hostname: free5gc-populate
      depends_on:
        - mongodb-f5gc
      build:
        context: ./free5gc-populate
        args:
          F5GCPOPULATE_RELEASE: 3f4c8b1
      volumes:
        - ./config/populate-config.yaml:/etc/free5gc-populate/config.yaml:ro
      command: --config /etc/free5gc-populate/config.yaml
      image: free5gc-populate
      networks:
        db-net:
    nrf:
      container_name: nrf
      hostname: nrf
      restart: always
      depends_on:
        - mongodb-f5gc
      build:
        context: ./free5gc
        target: free5gc-nrf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-nrf
      volumes:
        - ./config/nrf-config.yaml:/etc/nrf/config.yaml:ro
      command: --config /etc/nrf/config.yaml
      networks:
        db-net:
        sbi-net:
          ipv4_address: 10.0.211.2
    mongodb-f5gc:
      image: mongo
      container_name: mongodb-f5gc
      hostname: mongodb-f5gc
      command: mongod --port 27017 --bind_ip_all
      volumes:
        - ./f5gc-dbdata:/data/db
      restart: always
      networks:
        db-net:
    ausf:
      container_name: ausf
      hostname: ausf
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-ausf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-ausf
      volumes:
        - ./config/ausf-config.yaml:/etc/ausf/config.yaml:ro
      command: --config /etc/ausf/config.yaml
      networks:
        sbi-net:
          ipv4_address: 10.0.211.5
    nssf:
      container_name: nssf 
      hostname: nssf
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-nssf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-nssf
      volumes:
        - ./config/nssf-config.yaml:/etc/nssf/config.yaml:ro
      command: --config /etc/nssf/config.yaml
      networks:
        sbi-net:
          ipv4_address: 10.0.211.6
    udm:
      container_name: udm 
      hostname: udm
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-udm
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-udm
      volumes:
        - ./config/udm-config.yaml:/etc/udm/config.yaml:ro
      command: --config /etc/udm/config.yaml
      networks:
        sbi-net:
          ipv4_address: 10.0.211.7
    udr:
      container_name: udr 
      hostname: udr
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-udr
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-udr
      volumes:
        - ./config/udr-config.yaml:/etc/udr/config.yaml:ro
      command: --config /etc/udr/config.yaml
      networks:
        db-net:
        sbi-net:
          ipv4_address: 10.0.211.8
    pcf:
      container_name: pcf
      hostname: pcf
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-pcf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-pcf
      volumes:
        - ./config/pcf-config.yaml:/etc/pcf/config.yaml:ro
      command: --config /etc/pcf/config.yaml
      networks:
        db-net:
        sbi-net:
          ipv4_address: 10.0.211.9
  x-group-core-network-main-nf: &group-core-network-main-nf # amf, smf
    amf1:
      container_name: amf1
      hostname: amf1
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-amf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-amf
      volumes:
        - ./config/templates/config-amf.yaml:/etc/amf/config-template.yaml:ro
        - ./config/templates/scripts/config-amf.sh:/usr/local/bin/config.sh:ro
        - ./config/routing-amf.sh:/usr/local/bin/routing.sh:ro
      command: --config /etc/amf/config.yaml
      cap_add:
        - NET_ADMIN
      sysctls:
        - net.ipv6.conf.all.disable_ipv6=0
      environment:
        ROUTING: "routing.sh"
        TEMPLATE: "/etc/amf/config-template.yaml"
        CONFIG_FILE: "/etc/amf/config.yaml"
        CONFIG_SCRIPT: "config.sh"
        NGAP_IP: "10.0.202.3"
        #NGAP_IP: "fd00:d0cc:e700:1111:2::3"
        SBI_REGISTER_IP: "amf1.sbi-net"
        SBI_BINDING_IP: "10.0.211.4"
        MCC: "001"
        MNC: "01"
        AMF_ID: "000001"
        AMF_NAME: "AMF1"
        NRF_URI: "http://nrf.sbi-net:8000"
        DNN_LIST: "sliceA"
        SST_LIST: "1"
        SD_LIST: "010203"
        TAC: "1"
        LOCALITY: "loc1"
      networks:
        sbi-net:
          ipv4_address: 10.0.211.4
        n2-net:
          ipv4_address: 10.0.202.3
          ipv6_address: fd00:d0cc:e700:1111:3:8000:0:3
    smf1:
      container_name: smf1
      hostname: smf1
      restart: always
      depends_on:
        - upf1
        - nrf
      build:
        context: ./free5gc
        target: free5gc-smf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-smf
      volumes:
        - ./config/smf-config.yaml:/etc/smf/smf-config.yaml:ro
        - ./config/ue-routing.yaml:/etc/smf/ue-routing.yaml:ro
        - ./config/routing-smf.sh:/usr/local/bin/routing.sh:ro
      environment:
        - ROUTING=routing.sh
      cap_add:
        - NET_ADMIN
      command: --config /etc/smf/smf-config.yaml --uerouting /etc/smf/ue-routing.yaml
      networks:
        n4-net:
          ipv4_address: 10.0.204.2
        sbi-net:
          ipv4_address: 10.0.211.3
  x-group-internet-dn: &group-internet-dn # dns
    dns:
      container_name: dns
      hostname: dns
      image: bind9
      build:
        context: ./bind9
      command: -g -p 53
      cap_add:
        - NET_ADMIN
      volumes:
        - ./bind9-cache:/var/cache/bind
        - ./bind9/named.conf.local:/etc/bind/named.conf.local:ro
        - ./bind9/mno-named.conf.options:/etc/bind/named.conf.options:ro
        - ./bind9/test.db:/etc/bind/zones/test.db:ro
        - ./config/routing-dns.sh:/usr/local/bin/routing.sh:ro
      environment:
        - ROUTING=routing.sh
      networks:
        test-net:
          ipv4_address: 10.0.224.3
    site1:
      container_name: site1
      hostname: site1
      image: nginx
      volumes:
        - ./nginx/templates:/etc/nginx/templates:ro
      environment:
        NGINX_PORT: 80
        NGINX_SERVER_NAMES: site1.test
        NGINX_CONTENT: "Service ID: site1.test\nInstance ID: 10.0.224.5\n"
      networks:
        test-net:
          ipv4_address: 10.0.224.5
    site1-debug:
      <<: *debug-lvl2-common
      container_name: site1-debug
      network_mode: service:site1
    site1-entrypoint:
      <<: *entrypoint-test-dn
      container_name: site1-entrypoint
      network_mode: service:site1

services:
  <<: [*group-ue, *group-gnb, *group-upf-a, *group-core-network-main-nf, *group-core-network-aux-nf, *group-internet-dn]

networks:
  ran-net:
    name: ran-net
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-ran
      com.docker.network.container_iface_prefix: ran-
    ipam:
      driver: default
      config:
        - subnet: 10.0.200.0/24
          ip_range: 10.0.200.0/25
          gateway: 10.0.200.129
        - subnet: fd00:d0cc:e700:1111:1::/80
          ip_range: fd00:d0cc:e700:1111:1::/81
          gateway: fd00:d0cc:e700:1111:1:8000:0:1
  n2-net:
    name: n2-net
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-n2-net 
    ipam:
      driver: default
      config:
        - subnet: 10.0.202.0/24
        - subnet: fd00:d0cc:e700:1111:2::/80
          ip_range: fd00:d0cc:e700:1111:2::/81
          gateway: fd00:d0cc:e700:1111:2:8000:0:1
  n3-net:
    name: n3-net
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-n3-net 
    ipam:
      driver: default
      config:
        - subnet: 10.0.203.0/24
        - subnet: fd00:d0cc:e700:1111:3::/80
          ip_range: fd00:d0cc:e700:1111:3::/81
          gateway: fd00:d0cc:e700:1111:3:8000:0:1
  n4-net:
    name: n4-net
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-n4-net 
    ipam:
      driver: default
      config:
        - subnet: 10.0.204.0/24
  sbi-net:
    name: sbi-net
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-sbi-net 
    ipam:
      driver: default
      config:
        - subnet: 10.0.211.0/24
  db-net:
    name: db-net
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-db-net 
    ipam:
      driver: default
      config:
        - subnet: 10.0.212.0/24
  test-net:
    name: test-net
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-test-net 
    ipam:
      driver: default
      config:
        - subnet: 10.0.224.0/24
