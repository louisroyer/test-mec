# DEBUG
x-debug-common: &debug-common
  image: louisroyer/network-debug
  cap_add:
    - NET_ADMIN
  profiles:
    - debug

x-debug-hidden-common: &debug-hidden-common
  image: louisroyer/network-debug
  cap_add:
    - NET_ADMIN
  profiles:
    - debug-hidden

x-nextmn-srv6: &nextmn-srv6
  restart: always
  build:
    context: ./nextmn-srv6
    args:
      NEXTMNSR_RELEASE: v0.0.5
  image: nextmn-srv6
  cap_add:
    - NET_ADMIN
  sysctls:
    - net.ipv6.conf.all.disable_ipv6=0
    - net.ipv4.ip_forward=1
    - net.ipv6.conf.all.forwarding=1
    - net.ipv6.conf.all.seg6_enabled=1
    - net.ipv6.conf.default.seg6_enabled=1
  command: ["-c", "/etc/nextmn-srv6/config.yaml"]
  devices:
    - "/dev/net/tun:/dev/net/tun"


x-nextmn-srv6-ctrl: &nextmn-srv6-ctrl
  restart: always
  build:
    context: ./nextmn-srv6-ctrl
    args:
      NEXTMNSRCTRL_RELEASE: v0.0.1
  image: nextmn-srv6-ctrl
  command: ["-c", "/etc/nextmn-srv6-ctrl/config.yaml"]

x-srv6:
  nextmn-srv6-ctrl-debug:
    <<: *debug-common
    container_name: nextmn-srv6-ctrl-debug
    network_mode: service:nextmn-srv6-ctrl
  nextmn-srv6-ctrl:
    <<: *nextmn-srv6-ctrl
    container_name: nextmn-srv6-ctrl
    hostname: nextmn-srv6-ctrl
    volumes:
      - ./config/nextmn-srv6-ctrl.yaml:/etc/nextmn-srv6-ctrl/config.yaml
    networks:
      n4-net:
        ipv4_address: 10.0.210.6

  nextmn-srv6-dn-debug:
    <<: *debug-common
    container_name: nextmn-srv6-dn-debug
    network_mode: service:nextmn-srv6-dn
  nextmn-srv6-dn:
    <<: *nextmn-srv6
    container_name: nextmn-srv6-dn
    hostname: nextmn-srv6-dn
    volumes:
      - ./config/nextmn-srv6-pre-init-hook.sh:/usr/local/bin/pre-init-hook.sh:ro
      - ./config/nextmn-srv6-ipv4-post-init-hook.sh:/usr/local/bin/post-init-hook.sh:ro
      - ./config/nextmn-srv6-ipv4.yaml:/etc/nextmn-srv6/config.yaml
    networks:
      srv6-net:
        ipv4_address: 10.0.219.3
        ipv6_address: fd00:d0cc:e700:3333:1::3
      test-net:
        ipv4_address: 10.0.224.8
    
  nextmn-srv6-gtp-debug:
    <<: *debug-common
    container_name: nextmn-srv6-gtp-debug
    network_mode: service:nextmn-srv6-gtp
  nextmn-srv6-gtp:
    <<: *nextmn-srv6
    container_name: nextmn-srv6-gtp
    hostname: nextmn-srv6-gtp
    volumes:
      - ./config/nextmn-srv6-pre-init-hook.sh:/usr/local/bin/pre-init-hook.sh:ro
      - ./config/nextmn-srv6-gtp-post-init-hook.sh:/usr/local/bin/post-init-hook.sh:ro
      - ./config/nextmn-srv6-gtp.yaml:/etc/nextmn-srv6/config.yaml
    networks:
      mec-net:
        ipv4_address: 10.0.201.7
        ipv6_address: fd00:d0cc:e700:1111:4::7
      srv6-net:
        ipv4_address: 10.0.219.2
        ipv6_address: fd00:d0cc:e700:3333:1::2
    
  x-group-core-network-aux-nf: &group-core-network-aux-nf # f5gc-populate, nrf, mongodb, ausf, nssf, udm, upr, pcf


# F5GC
x-f5gc: &f5gc
  free5gc-populate:
    image: louisroyer/free5gc-populate
    container_name: free5gc-populate
    hostname: free5gc-populate
    restart: "no" # oneshot
    depends_on:
      - mongodb-f5gc
    command: [" "]
    environment:
      MONGO_HOST: "mongodb-f5gc.db"
      SLICES: |-
      - sst: 1
          sd: 000003
          varqi: 9
          dnn: srv6
      IMSI: |-
        - imsi-00101         1
    networks:
        db:
  mongodb-f5gc:
    image: mongo
    container_name: mongodb-f5gc
    hostname: mongodb-f5gc
    command: mongod --port 27017 --bind_ip_all
    restart: always
    networks:
      db:

# TODO: SMF paramétrable
    smf:
      container_name: smf
      hostname: smf
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-smf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-smf
      volumes:
        - ./config/smf-config.yaml:/etc/smf/smf-config.yaml:ro
        - ./config/ue-routing.yaml:/etc/smf/ue-routing.yaml:ro
      cap_add:
        - NET_ADMIN
      command: --config /etc/smf/smf-config.yaml --uerouting /etc/smf/ue-routing.yaml
      networks:
        n4:
          ipv4_address: 10.0.3.1
        sbi:
          ipv4_address: 10.0.5.1

# TODO: AMF paramétrable
    amf:
      container_name: amf
      hostname: amf
      restart: always
      depends_on:
        - nrf
      build:
        context: ./free5gc
        target: free5gc-amf
        args:
          F5GC_RELEASE: v3.2.0
      image: free5gc-amf
      volumes:
        - ./config/templates/config-amf.yaml:/etc/amf/config-template.yaml:ro
        - ./config/templates/scripts/config-amf.sh:/usr/local/bin/config.sh:ro
      command: --config /etc/amf/config.yaml
      cap_add:
        - NET_ADMIN
      sysctls:
        - net.ipv6.conf.all.disable_ipv6=0
      environment:
        TEMPLATE: "/etc/amf/config-template.yaml"
        CONFIG_FILE: "/etc/amf/config.yaml"
        CONFIG_SCRIPT: "config.sh"
        NGAP_IP: "10.0.2.1"
        SBI_REGISTER_IP: "amf.sbi"
        SBI_BINDING_IP: "10.0.5.2"
        MCC: "001"
        MNC: "01"
        AMF_ID: "000001"
        AMF_NAME: "AMF1"
        NRF_URI: "http://nrf.sbi-net:8000"
        DNN_LIST: "srv6"
        SST_LIST: "1"
        SD_LIST: "000003"
        TAC: "1"
        LOCALITY: "loc1"
      networks:
        sbi:
          ipv4_address: 10.0.5.2
        n2:
          ipv4_address: 10.0.2.1

  nrf:
    container_name: nrf
    hostname: nrf
    restart: always
    build:
      context: ./free5gc
      target: free5gc-nrf
      args:
        F5GC_RELEASE: v3.2.0
    image: free5gc-nrf
    environment:
      TEMPLATE: "/etc/nrf/config-template.yaml"
      CONFIG_FILE: "/etc/nrf/config.yaml"
      CONFIG_SCRIPT: "config.sh"
      MONGO_HOST: "mongodb-free5gc.db"
      BINDING_IP: 10.0.5.3
      REGISTER_IP: nrf.sbi
      volumes:
        - ./config/templates/config-nrf.yaml:/etc/nrf/config-template.yaml:ro
        - ./config/templates/scripts/config-nrf.sh:/usr/local/bin/config.sh:ro
    command: --config /etc/nrf/config.yaml
    networks:
      sbi:
        ipv4_address: 10.0.5.3
      db:
      
  ausf:
    container_name: ausf
    hostname: ausf
    restart: always
    depends_on:
      - nrf
    build:
      context: ./free5gc
      target: free5gc-ausf
      args:
        F5GC_RELEASE: v3.2.0
    image: free5gc-ausf
    environment:
      TEMPLATE: "/etc/ausf/config-template.yaml"
      CONFIG_FILE: "/etc/ausf/config.yaml"
      CONFIG_SCRIPT: "config.sh"
      NRF: nrf.sbi:8000
      BINDING_IP: 10.0.5.4
      REGISTER_IP: ausf.sbi
      volumes:
        - ./config/templates/config-ausf.yaml:/etc/ausf/config-template.yaml:ro
        - ./config/templates/scripts/config-ausf.sh:/usr/local/bin/config.sh:ro
    command: --config /etc/ausf/config.yaml
    networks:
      sbi:
        ipv4_address: 10.0.5.4
      
  n3iwf:
    container_name: n3iwf
    hostname: n3iwf
    restart: always
    depends_on:
      - nrf
    build:
      context: ./free5gc
      target: free5gc-n3iwf
      args:
        F5GC_RELEASE: v3.2.0
    image: free5gc-n3iwf
    environment:
      TEMPLATE: "/etc/n3iwf/config-template.yaml"
      CONFIG_FILE: "/etc/n3iwf/config.yaml"
      CONFIG_SCRIPT: "config.sh"
      NRF: nrf.sbi:8000
      BINDING_IP: 10.0.5.5
      REGISTER_IP: n3iwf.sbi
      volumes:
        - ./config/templates/config-n3iwf.yaml:/etc/n3iwf/config-template.yaml:ro
        - ./config/templates/scripts/config-n3iwf.sh:/usr/local/bin/config.sh:ro
    command: --config /etc/n3iwf/config.yaml
    networks:
      sbi:
        ipv4_address: 10.0.5.5
      
  nssf:
    container_name: nssf
    hostname: nssf
    restart: always
    depends_on:
      - nrf
    build:
      context: ./free5gc
      target: free5gc-nssf
      args:
        F5GC_RELEASE: v3.2.0
    image: free5gc-nssf
    environment:
      TEMPLATE: "/etc/nssf/config-template.yaml"
      CONFIG_FILE: "/etc/nssf/config.yaml"
      CONFIG_SCRIPT: "config.sh"
      NRF: nrf.sbi:8000
      BINDING_IP: 10.0.5.6
      REGISTER_IP: nssf.sbi
      SUPPORTED_NSSAIS: |-
        - sst: 1
          sd: 000003
      volumes:
        - ./config/templates/config-nssf.yaml:/etc/nssf/config-template.yaml:ro
        - ./config/templates/scripts/config-nssf.sh:/usr/local/bin/config.sh:ro
    command: --config /etc/nssf/config.yaml
    networks:
      sbi:
        ipv4_address: 10.0.5.6
      
  pcf:
    container_name: pcf
    hostname: pcf
    restart: always
    depends_on:
      - nrf
    build:
      context: ./free5gc
      target: free5gc-pcf
      args:
        F5GC_RELEASE: v3.2.0
    image: free5gc-pcf
    environment:
      TEMPLATE: "/etc/pcf/config-template.yaml"
      CONFIG_FILE: "/etc/pcf/config.yaml"
      CONFIG_SCRIPT: "config.sh"
      NRF: nrf.sbi:8000
      MONGO_HOST: "mongodb-free5gc.db"
      BINDING_IP: 10.0.5.7
      REGISTER_IP: pcf.sbi
      volumes:
        - ./config/templates/config-pcf.yaml:/etc/pcf/config-template.yaml:ro
        - ./config/templates/scripts/config-pcf.sh:/usr/local/bin/config.sh:ro
    command: --config /etc/pcf/config.yaml
    networks:
      sbi:
        ipv4_address: 10.0.5.7
      db:
      
  udm:
    container_name: udm
    hostname: udm
    restart: always
    depends_on:
      - nrf
    build:
      context: ./free5gc
      target: free5gc-udm
      args:
        F5GC_RELEASE: v3.2.0
    image: free5gc-udm
    environment:
      TEMPLATE: "/etc/udm/config-template.yaml"
      CONFIG_FILE: "/etc/udm/config.yaml"
      CONFIG_SCRIPT: "config.sh"
      NRF: nrf.sbi:8000
      BINDING_IP: 10.0.5.8
      REGISTER_IP: udm.sbi
      volumes:
        - ./config/templates/config-udm.yaml:/etc/udm/config-template.yaml:ro
        - ./config/templates/scripts/config-udm.sh:/usr/local/bin/config.sh:ro
    command: --config /etc/udm/config.yaml
    networks:
      sbi:
        ipv4_address: 10.0.5.8
      
  udr:
    container_name: udr
    hostname: udr
    restart: always
    depends_on:
      - nrf
    build:
      context: ./free5gc
      target: free5gc-udr
      args:
        F5GC_RELEASE: v3.2.0
    image: free5gc-udr
    environment:
      TEMPLATE: "/etc/udr/config-template.yaml"
      CONFIG_FILE: "/etc/udr/config.yaml"
      CONFIG_SCRIPT: "config.sh"
      NRF: nrf.sbi:8000
      MONGO_HOST: "mongodb-free5gc.db"
      BINDING_IP: 10.0.5.9
      REGISTER_IP: udr.sbi
      volumes:
        - ./config/templates/config-udr.yaml:/etc/udr/config-template.yaml:ro
        - ./config/templates/scripts/config-udr.sh:/usr/local/bin/config.sh:ro
    command: --config /etc/udr/config.yaml
    networks:
      sbi:
        ipv4_address: 10.0.5.9
      db:
      
  




# GNB CONFIG
x-gnb-common: &gnb-common
  image: louisroyer/ueransim-gnb
  cap_add:
    - NET_ADMIN
  devices:
    - "/dev/net/tun:/dev/net/tun"
  sysctls:
    - net.ipv6.conf.all.disable_ipv6=0
  command: [" "]

x-gnb-environment-common: &gnb-environment-common
  MCC: "001"
  MNC: "01"
  ID_LEN: 32
  TAC: 1
  AMF_CONFIGS: |-
    - address: 10.0.214.3
      port : 38412
    #- address: fd00:d0cc:e700:1111:3::3
    #  port : 38412


# GNB
x-gnb: &gnb
  gnb1-debug:
    <<: *debug-common
    container_name: gnb1-debug
    network_mode: service:gnb1
  gnb1:
    <<: *gnb-common
    container_name: gnb1
    hostname: gnb1
    volumes:
        - ./config/routing-gnb.sh:/usr/local/bin/routing.sh:ro
    environment:
      NCI:         1
      ROUTING_SCRIPT: "routing.sh"
      RLS_IP: "fd00:d0cc:e700:1111:1:8000:0:0002"
      #RLS_IP: "10.0.200.130"
      N2_IP: "10.0.213.2"
      #N2_IP: "fd00:d0cc:e700:1111:2::2"
      N3_IP: "10.0.201.2"
      #N3_IP: "fd00:d0cc:e700:1111:4::2"
      SUPPORTED_NSSAIS: |-
        - sst: 1
          sd: 0x010203
  
    gnb1-debug:
  <<: *debug-common
  container_name: gnb1-debug
  network_mode: service:gnb1
gnb1:
      environment:
        NCI: "0x000000001"
        ROUTING_SCRIPT: "routing.sh"
        RLS_IP: "fd00:d0cc:e700:1111:1:8000:0:2"
        #RLS_IP: "10.0.200.130"
        N2_IP: "10.0.213.2"
        #N2_IP: "fd00:d0cc:e700:1111:2::2"
        N3_IP: "10.0.201.2"
        #N3_IP: "fd00:d0cc:e700:1111:4::2"
        SUPPORTED_NSSAIS: |-
          - sst: 1
            sd: 0x010203
      networks:
        ran-net:
          ipv4_address: 10.0.200.130
          ipv6_address: fd00:d0cc:e700:1111:1:8000:0:2
        tn-cp-gw-net:
          ipv4_address: 10.0.213.2
          ipv6_address: fd00:d0cc:e700:1111:2::2
        mec-net:
          ipv4_address: 10.0.201.2
          ipv6_address: fd00:d0cc:e700:1111:4::2

# USER EQUIPMENTS CONFIG
x-ue-environment-common: &ue-environment-common
  MCC: "001"
  MNC: "01"
x-ue-environment-slice-srv6: &ue-environment-slice-srv6
  <<: *ue-environment-common
  GNBS: |-
  #- "10.0.200.130"
  - "fd00:d0cc:e700:1111:1:8000:0:0002"
  CONFIGURED_NSSAI: |-
    - sst: 1
      sd: 000003
  DEFAULT_NSSAI: |-
    - sst: 1
      sd: 000003
  SESSIONS: |-
    - type: "IPv4"
      apn: "srv6"
      slice:
        sst: 1
        sd: 000003


x-ue-common: &ue-common
  image: louisroyer/ueransim-ue
  cap_add:
    - NET_ADMIN
  devices:
    - "/dev/net/tun:/dev/net/tun"
  sysctls:
    - net.ipv6.conf.all.disable_ipv6=0
  dns:
    - 10.0.9.1
  command: [" "]
  networks:
    ran-net: # automatic allocation for UEs

x-ue: &user-equipments
  # USER EQUIPMENTS
  ue1-debug:
    <<: *debug-common
    container_name: ue1-debug
    network_mode: service:ue1
  ue1:
    <<: *ue-common
    container_name: ue1
    hostname: ue1
    environment:
      <<: *ue-environment-slice-srv6
      MSISDN: "0000000001"
  ue1-socks:
      <<: *socks
      container_name: ue1-socks
      network_mode: service:ue1
  
  ue2-debug:
    <<: *debug-common
    container_name: ue2-debug
    network_mode: service:ue2
  ue2:
    <<: *ue-common
    container_name: ue2
    hostname: ue2
    environment:
      <<: *ue-environment-slice-srv6
      MSISDN: "0000000002"
  ue2-socks:
      <<: *socks
      container_name: ue2-socks
      network_mode: service:ue2
  



x-data-networks: &data-networks
  # DATA NETWORKS SERVICES
  site1-internet-debug:
    <<: *debug-common
    container_name: site1-internet-debug
    network_mode: service:site1-internet
  site1-internet:
    container_name: site1-internet
    hostname: site1-internetimage: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site1.test
      NGINX_CONTENT: "Service ID: site1.test (10.0.9.2)\nInstance ID: site1.test (10.0.7.2)\n"
    networks:
      internet:
        ipv4_address: 10.0.7.2
    
  site1-edge0-debug:
    <<: *debug-common
    container_name: site1-edge0-debug
    network_mode: service:site1-edge0
  site1-edge0:
    container_name: site1-edge0
    hostname: site1-edge0image: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site1.mec.test site1.test
      NGINX_CONTENT: "Service ID: site1.test (10.0.9.2)\nInstance ID: site1.edge0.test (10.0.8.2)\n"
    networks:
      edge0:
        ipv4_address: 10.0.8.2
    
  site1-edge1-debug:
    <<: *debug-common
    container_name: site1-edge1-debug
    network_mode: service:site1-edge1
  site1-edge1:
    container_name: site1-edge1
    hostname: site1-edge1image: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site1.mec.test site1.test
      NGINX_CONTENT: "Service ID: site1.test (10.0.9.2)\nInstance ID: site1.edge1.test (10.0.9.2)\n"
    networks:
      edge1:
        ipv4_address: 10.0.9.2
    
  
  site2-internet-debug:
    <<: *debug-common
    container_name: site2-internet-debug
    network_mode: service:site2-internet
  site2-internet:
    container_name: site2-internet
    hostname: site2-internetimage: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site2.test
      NGINX_CONTENT: "Service ID: site2.test (10.0.9.3)\nInstance ID: site2.test (10.0.7.3)\n"
    networks:
      internet:
        ipv4_address: 10.0.7.3
    
  site2-edge0-debug:
    <<: *debug-common
    container_name: site2-edge0-debug
    network_mode: service:site2-edge0
  site2-edge0:
    container_name: site2-edge0
    hostname: site2-edge0image: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site2.mec.test site2.test
      NGINX_CONTENT: "Service ID: site2.test (10.0.9.3)\nInstance ID: site2.edge0.test (10.0.8.3)\n"
    networks:
      edge0:
        ipv4_address: 10.0.8.3
    
  site2-edge1-debug:
    <<: *debug-common
    container_name: site2-edge1-debug
    network_mode: service:site2-edge1
  site2-edge1:
    container_name: site2-edge1
    hostname: site2-edge1image: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site2.mec.test site2.test
      NGINX_CONTENT: "Service ID: site2.test (10.0.9.3)\nInstance ID: site2.edge1.test (10.0.9.3)\n"
    networks:
      edge1:
        ipv4_address: 10.0.9.3
    
  
  site3-internet-debug:
    <<: *debug-common
    container_name: site3-internet-debug
    network_mode: service:site3-internet
  site3-internet:
    container_name: site3-internet
    hostname: site3-internetimage: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site3.test
      NGINX_CONTENT: "Service ID: site3.test (10.0.9.4)\nInstance ID: site3.test (10.0.7.4)\n"
    networks:
      internet:
        ipv4_address: 10.0.7.4
    
  site3-edge0-debug:
    <<: *debug-common
    container_name: site3-edge0-debug
    network_mode: service:site3-edge0
  site3-edge0:
    container_name: site3-edge0
    hostname: site3-edge0image: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site3.mec.test site3.test
      NGINX_CONTENT: "Service ID: site3.test (10.0.9.4)\nInstance ID: site3.edge0.test (10.0.8.4)\n"
    networks:
      edge0:
        ipv4_address: 10.0.8.4
    
  site3-edge1-debug:
    <<: *debug-common
    container_name: site3-edge1-debug
    network_mode: service:site3-edge1
  site3-edge1:
    container_name: site3-edge1
    hostname: site3-edge1image: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - /home/louis/Vidéos:/usr/share/nginx/videos:ro
    environment:
      NGINX_PORT: 80
      NGINX_SERVER_NAMES: site3.mec.test site3.test
      NGINX_CONTENT: "Service ID: site3.test (10.0.9.4)\nInstance ID: site3.edge1.test (10.0.9.4)\n"
    networks:
      edge1:
        ipv4_address: 10.0.9.4
    
  
  dns-internet-debug:
    <<: *debug-common
    container_name: dns-internet-debug
    network_mode: service:dns-internet
  dns-internet:
    container_name: dns-internet
    hostname: dns-internetinit: true
    image: bind9
    build:
      context: ./bind9
    command: -g -p 53
    cap_add:
      - NET_ADMIN
    volumes:
      - ./bind9/named.conf.local:/etc/bind/named.conf.local:ro
      - ./bind9/mno-named.conf.options:/etc/bind/named.conf.options:ro
      - ./bind9/test.db:/etc/bind/zones/test.db:ro
      - ./config/routing-dns.sh:/usr/local/bin/routing.sh:ro
    environment:
      - ROUTING=routing.sh
    networks:
      internet:
        ipv4_address: 10.0.7.1
    
  dns-edge0-debug:
    <<: *debug-common
    container_name: dns-edge0-debug
    network_mode: service:dns-edge0
  dns-edge0:
    container_name: dns-edge0
    hostname: dns-edge0init: true
    image: bind9
    build:
      context: ./bind9
    command: -g -p 53
    cap_add:
      - NET_ADMIN
    volumes:
      - ./bind9/mec-named.conf.local:/etc/bind/named.conf.local:ro
      - ./bind9/named.conf.options:/etc/bind/named.conf.options:ro
      - ./bind9/test-mec.db:/etc/bind/zones/test.db:ro
      - ./config/routing-mec-dns.sh:/usr/local/bin/routing.sh:ro
    environment:
      - ROUTING=routing.sh
    networks:
      edge0:
        ipv4_address: 10.0.8.1
    
  dns-edge1-debug:
    <<: *debug-common
    container_name: dns-edge1-debug
    network_mode: service:dns-edge1
  dns-edge1:
    container_name: dns-edge1
    hostname: dns-edge1init: true
    image: bind9
    build:
      context: ./bind9
    command: -g -p 53
    cap_add:
      - NET_ADMIN
    volumes:
      - ./bind9/mec-named.conf.local:/etc/bind/named.conf.local:ro
      - ./bind9/named.conf.options:/etc/bind/named.conf.options:ro
      - ./bind9/test-mec.db:/etc/bind/zones/test.db:ro
      - ./config/routing-mec-dns.sh:/usr/local/bin/routing.sh:ro
    environment:
      - ROUTING=routing.sh
    networks:
      edge1:
        ipv4_address: 10.0.9.1
    
  

services:
  <<: *data-networks
  <<: *user-equipments
  <<: *gnb
  <<: *f5gc

#  <<: [*group-ue, *group-gnb, *group-upf-i, *group-upf-a, *group-core-network-main-nf, *group-core-network-aux-nf, *group-mec-dn, *group-internet-dn, *group-trunks, *group-nextmn-srv6]


networks:ran:
    name: ran
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: ran-
      com.docker.network.bridge.name: ran
    ipam:
      driver: default
      config:
      - subnet: 10.0.1.0/24
        ip_range: 10.0.1.0/25
        gateway: 10.0.1.129
      - subnet: fd00::1:0:0:0/80
        ip_range: fd00::1:0:0:0/81
        gateway: fd00::1:8000:0:1

  n2:
    name: n2
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: n2-
      com.docker.network.bridge.name: n2
    ipam:
      driver: default
      config:
      - subnet: 10.0.2.0/24
        ip_range: 10.0.2.0/25
        gateway: 10.0.2.129
      - subnet: fd00::2:0:0:0/80
        ip_range: fd00::2:0:0:0/81
        gateway: fd00::2:8000:0:1

  n4:
    name: n4
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: n4-
      com.docker.network.bridge.name: n4
    ipam:
      driver: default
      config:
      - subnet: 10.0.3.0/24
        ip_range: 10.0.3.0/25
        gateway: 10.0.3.129
      - subnet: fd00::3:0:0:0/80
        ip_range: fd00::3:0:0:0/81
        gateway: fd00::3:8000:0:1

  dataplane:
    name: dataplane
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: dataplane-
      com.docker.network.bridge.name: dataplane
    ipam:
      driver: default
      config:
      - subnet: 10.0.4.0/24
        ip_range: 10.0.4.0/25
        gateway: 10.0.4.129
      - subnet: fd00::4:0:0:0/80
        ip_range: fd00::4:0:0:0/81
        gateway: fd00::4:8000:0:1

  sbi:
    name: sbi
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: sbi-
      com.docker.network.bridge.name: sbi
    ipam:
      driver: default
      config:
      - subnet: 10.0.5.0/24
        ip_range: 10.0.5.0/25
        gateway: 10.0.5.129
      - subnet: fd00::5:0:0:0/80
        ip_range: fd00::5:0:0:0/81
        gateway: fd00::5:8000:0:1

  db:
    name: db
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: db-
      com.docker.network.bridge.name: db
    ipam:
      driver: default
      config:
      - subnet: 10.0.6.0/24
        ip_range: 10.0.6.0/25
        gateway: 10.0.6.129
      - subnet: fd00::6:0:0:0/80
        ip_range: fd00::6:0:0:0/81
        gateway: fd00::6:8000:0:1

  edge0:
    name: edge0
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: edge0-
      com.docker.network.bridge.name: edge0
    ipam:
      driver: default
      config:
      - subnet: 10.0.7.0/24
        ip_range: 10.0.7.0/25
        gateway: 10.0.7.129
      - subnet: fd00::7:0:0:0/80
        ip_range: fd00::7:0:0:0/81
        gateway: fd00::7:8000:0:1

  edge1:
    name: edge1
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: edge1-
      com.docker.network.bridge.name: edge1
    ipam:
      driver: default
      config:
      - subnet: 10.0.8.0/24
        ip_range: 10.0.8.0/25
        gateway: 10.0.8.129
      - subnet: fd00::8:0:0:0/80
        ip_range: fd00::8:0:0:0/81
        gateway: fd00::8:8000:0:1

  internet:
    name: internet
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: internet-
      com.docker.network.bridge.name: internet
    ipam:
      driver: default
      config:
      - subnet: 10.0.9.0/24
        ip_range: 10.0.9.0/25
        gateway: 10.0.9.129
      - subnet: fd00::9:0:0:0/80
        ip_range: fd00::9:0:0:0/81
        gateway: fd00::9:8000:0:1

  
